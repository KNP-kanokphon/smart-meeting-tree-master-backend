generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["interactiveTransactions"]
  binaryTargets   = ["native"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model meetings {
  id        Int    @id @default(autoincrement())
  detail    String @db.Text
  title     String @db.VarChar(255)
  room      String @db.VarChar(255)
  floor     String @db.VarChar(255)
  building  String @db.VarChar(255)
  day       String @db.VarChar(255)
  starttime String @db.VarChar(255)
  endtime   String @db.VarChar(255)
  uuid      String @db.VarChar(255)
}

model user {
  id       Int     @id @default(autoincrement())
  username String? @db.VarChar(100)
  password String  @db.VarChar(100)
  type     String  @db.VarChar(10)
  level    String  @db.VarChar(50)
  uuid     String  @db.VarChar(100)
}

model listname {
  id          Int     @id @default(autoincrement())
  uuid        String  @db.VarChar(250)
  username    String  @db.VarChar(250)
  phone       String? @db.VarChar(250)
  type        String  @db.VarChar(20)
  course      String? @db.VarChar(250)
  position    String? @db.VarChar(250)
  positionkpi String? @db.VarChar(250)
}

model course {
  id         Int      @id @default(autoincrement())
  uuid       String   @db.VarChar(100)
  namecourse String   @db.VarChar(100)
  createdate DateTime @db.Timestamptz(3)
}

model position {
  id           Int      @id @default(autoincrement())
  uuid         String   @db.VarChar(100)
  nameposition String   @db.VarChar(100)
  createdate   DateTime @db.Timestamptz(3)
}

model positionkpi {
  id         Int     @id @default(autoincrement())
  uuid       String  @db.VarChar(100)
  username   String  @db.VarChar(100)
  createdate String? @db.VarChar(20)
  updatedate String? @db.VarChar(250)
}

model userattendees {
  id          Int     @id @default(autoincrement())
  username    String  @db.VarChar(255)
  uuidprofile String  @db.VarChar(255)
  uuid        String  @db.VarChar(255)
  idmeeting   String  @db.VarChar(255)
  type        String  @db.VarChar(255)
  type_user   String  @db.VarChar(255)
  position    String  @db.VarChar(255)
  confirm     Boolean @db.Boolean
  checkin     Boolean @db.Boolean
}

model agendes {
  id            Int     @id @default(autoincrement())
  uuid          String? @db.VarChar(255)
  agendes       String? @db.VarChar(255)
  detailagendes String? @db.VarChar(255)
  step          String? @db.VarChar(255)
}

model detailagendes {
  id         Int     @id @default(autoincrement())
  idmeeting  String  @db.VarChar(255)
  step       String? @db.VarChar(255)
  idagendess String? @db.VarChar(255)
  detail     String? @db.VarChar(255)
  type       String? @db.VarChar(255)
  filepart   String? @db.VarChar(255)
}

model foodinmeeting {
  id       Int     @id @default(autoincrement())
  uuid     String? @db.VarChar(255)
  typefood String  @db.VarChar(255)
  namefood String  @db.VarChar(255)
}

model files {
  id        Int     @id @default(autoincrement())
  idmeeting String  @db.VarChar(255)
  namefile  String  @db.VarChar(255)
  pathfile  String  @db.VarChar(255)
  type      String  @db.VarChar(255)
  step      String? @db.VarChar(255)
}
